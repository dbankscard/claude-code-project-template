{
  "project": {
    "name": "{{PROJECT_NAME}}",
    "type": "python",
    "version": "0.1.0"
  },
  "hooks": {
    "postToolUse": [
      {
        "tool": "Edit",
        "command": ".claude/hooks/auto-format.sh ${file_path}",
        "description": "Auto-format edited files"
      },
      {
        "tool": "Edit",
        "command": ".claude/hooks/security-check.py file ${file_path}",
        "description": "Security validation on file edits"
      },
      {
        "tool": "Edit",
        "command": ".claude/hooks/test-automation.py ${file_path}",
        "description": "Run related tests after code changes"
      }
    ],
    "preToolUse": [
      {
        "tool": "Bash",
        "command": ".claude/hooks/security-check.py command \"${command}\"",
        "description": "Security check for commands"
      }
    ],
    "userPromptSubmit": [
      {
        "command": ".claude/hooks/intelligent-automation.py",
        "description": "Suggest relevant sub-agents based on context"
      }
    ]
  },
  "autoApprove": {
    "commands": [
      "ls",
      "pwd",
      "cd",
      "cat",
      "grep",
      "find",
      "echo",
      "git status",
      "git diff",
      "git log",
      "git branch",
      "git add",
      "python",
      "pytest",
      "pip list",
      "npm list",
      "npm run",
      "make"
    ],
    "patterns": [
      "^git (?!push|pull|fetch|remote)",
      "^python .*\\.py$",
      "^pytest",
      "^pip install -r",
      "^npm install$",
      "^make (test|lint|format)"
    ]
  },
  "blocked": {
    "commands": [
      "rm -rf /",
      "chmod 777",
      "sudo rm",
      ":(){ :|:& };:"
    ],
    "patterns": [
      "curl .* \\| .*sh",
      "wget .* \\| .*sh",
      "eval\\(",
      "exec\\("
    ]
  },
  "subAgents": {
    "defaultTimeout": 300,
    "maxConcurrent": 3,
    "contextInjection": {
      "enabled": true,
      "files": [
        "CLAUDE.md",
        "docs/ai-context/project-structure.md"
      ]
    }
  },
  "development": {
    "testCommand": "pytest",
    "lintCommand": "ruff check .",
    "formatCommand": "black . && isort .",
    "typeCheckCommand": "mypy ."
  }
}